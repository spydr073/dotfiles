
#──────────────────────────────────────────────────────────────────────────────────────────────────
#
#    ████████╗███╗   ███╗██╗   ██╗██╗  ██╗     ██████╗ ██████╗ ███╗   ██╗███████╗██╗ ██████╗
#    ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝    ██╔════╝██╔═══██╗████╗  ██║██╔════╝██║██╔════╝
#       ██║   ██╔████╔██║██║   ██║ ╚███╔╝     ██║     ██║   ██║██╔██╗ ██║█████╗  ██║██║  ███╗
#       ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗     ██║     ██║   ██║██║╚██╗██║██╔══╝  ██║██║   ██║
#       ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗    ╚██████╗╚██████╔╝██║ ╚████║██║     ██║╚██████╔╝
#       ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝     ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝     ╚═╝ ╚═════╝
#
#──────────────────────────────────────────────────────────────────────────────────────────────────



#--------------------------------------------------------------------------------------[ Settings ]
#{{{1

set-option -ga terminal-overrides ",xterm-256color:Tc"
set-option -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

set -g update-environment "SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

#-- disable automatic window rename
set-option -g allow-rename off

#-- usability
##set-window-option -g mode-keys vi
##set-option -g status-keys vi
setw -g mode-keys vi
set -g status-keys vi

#-- unbind all default keybindings
unbind-key -a

#-- durration of messages
set -g display-time 1000

#-- set scrollback history
set -g history-limit 10000

#-- shorten command delay
set -sg escape-time 0

#-- aggressive resizing of windows
set-window-option -g aggressive-resize on

#-- set window and pane index to 0 or 1 (0 by default)
set-option -g base-index 1
set-option -g renumber-windows on
setw -g pane-base-index 0
setw -g main-pane-width 80

#-- disable bell messages
set -g bell-action any
set -g visual-bell off
set -g visual-activity off
set -g visual-silence off

#}}}

#--------------------------------------------------------------------------------------[ Bindings ]
#{{{1
#-- reset leader key

set-option -g prefix `
bind-key ` send-prefix

bind-key 0 select-window -t 0
bind-key 1 select-window -t 1
bind-key 2 select-window -t 2
bind-key 3 select-window -t 3
bind-key 4 select-window -t 4
bind-key 5 select-window -t 5
bind-key 6 select-window -t 6
bind-key 7 select-window -t 7
bind-key 8 select-window -t 8
bind-key 9 select-window -t 9

#-- mouse toggling
bind m run "\
    tmux show-options -g | grep -q "mouse.*on"; \
    if [ \$? = 0 ]; \
    then  \
        toggle=off;  \
    else  \
        toggle=on;  \
    fi;  \
    tmux display-message \"  mouse-mode : \$toggle\";  \
    tmux set-option -w mouse \$toggle; \
    tmux set-option -g mouse \$toggle; \
    "

#-- zoom current pane
bind Z \
    new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
    swap-pane -s tmux-zoom.0 \;\
    select-window -t tmux-zoom
#-- restore zoomed pane
bind z \
    last-window \;\
    swap-pane -s tmux-zoom.0 \;\
    kill-window -t tmux-zoom


#-- reload and kill
bind     r source-file ~/.tmux.conf \; display "  Configuration Reload "
bind     q confirm-before -p "kill-window #W? (y/n)" kill-window



bind-key b   break-pane -d
bind-key C-j choose-tree

# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

bind-key h split-window -h "htop"

bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

bind-key C-b send-keys 'tm_attach && exit' 'C-m'
bind-key Q run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'




#-- window managment
bind-key c command-prompt -p "  window name:"  " new-window; rename-window '%%'"
bind-key t command-prompt -p "  window tag:"  "  swap-window -t '%%'"
bind-key , command-prompt -p "  new name:" "     rename-window '%%'"


# smart pane switching with awareness of vim splits and fzf
is_vim="tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$'"
is_fzf="tmux display-message -p '#{pane_tty}' | sed 's=/dev/==' | xargs pgrep 'fzf' -t &> /dev/null"

bind      h run "($is_vim && tmux send-keys C-h) \
              || tmux select-pane -L"
bind      j run "($is_vim && tmux send-keys C-j) \
              || ($is_fzf && tmux send-keys C-j) \
              || tmux select-pane -D"
bind      k run "($is_vim && tmux send-keys C-k) \
              || ($is_fzf && tmux send-keys C-k) \
              || tmux select-pane -U"
bind      l run "($is_vim && tmux send-keys C-l) \
              || tmux select-pane -R"

bind -n C-h run "($is_vim && tmux send-keys C-h) \
              || tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j) \
              || ($is_fzf && tmux send-keys C-j) \
              || tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) \
              || ($is_fzf && tmux send-keys C-k) \
              || tmux select-pane -U"
bind -n C-l run "($is_vim && tmux send-keys C-l) \
              || tmux select-pane -R"



# Start copy mode when scrolling up
bind -n WheelUpPane copy-mode

#-- use j and k to page up/down
#bind-key -n -T copy-mode-vi C-S-k send-keys -X history-up
#bind-key -n -T copy-mode-vi C-S-j send-keys -X history-down
#bind -n C-V copy-mode -u

##-- use v and y to
#bind-key -T copy-mode-vi 'v' send -X begin-selection
#bind-key -T copy-mode-vi 'V' send -X select-line
#bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
#bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard"


bind-key -n -r C-Up      split-window -b -v -c "#{pane_current_path}"
bind-key -n -r C-Down    split-window -v    -c "#{pane_current_path}"
bind-key -n -r C-Left    split-window -b -h -c "#{pane_current_path}"
bind-key -n -r C-Right   split-window -h    -c "#{pane_current_path}"

bind-key -n -r C-S-Up    resize-pane -U 4
bind-key -n -r C-S-Down  resize-pane -D 4
bind-key -n -r C-S-Left  resize-pane -L 4
bind-key -n -r C-S-Right resize-pane -R 4

#}}}

#------------------------------------------------------------------------------------[ Appearance ]
#{{{1

BARBG="#000000"

TAGBG="#212627"
TAGFG="#aaaaaa"

MSGBG="#212627"
MSGFG="#77dd88"

SELBG="#212627"
SELFG="#a9fff1"

TITLEBG1="#ababab"
TITLEFG1="#222222"

TITLEBG2="#232323"
TITLEFG2="#dddddd"


#-- window style
set-option -g pane-border-fg black
set-option -g pane-active-border-fg black

#-- alert style
set-option -g message-bg default
set-option -g message-fg "#77dd88"

# visual notification of activity in other windows
setw -g monitor-activity on
#setw -g window-status-activity-fg "#77dd88"
#setw -g window-status-activity-bg "#222222"
setw -g window-status-activity-attr none
set -g window-status-separator ""

#-- statusbar settings
set-option -g status on
set -g status-interval 20
set -g status-justify left

set -g status-fg "#ffffff"
set -g status-bg "#000000"

#-- format window tags
setw -g window-status-format "\
#{?window_activity_flag,\
#[fg=$BARBG]#[bg=$MSGBG]\
#[fg=$MSGFG]#[bg=$MSGBG] #I∙#W \
#[fg=$MSGBG]#[bg=$BARBG]\
#[default]\
,\
#[fg=$BARBG]#[bg=$TAGBG]\
#[fg=$TAGFG]#[bg=$TAGBG] #I∙#W \
#[fg=$TAGBG]#[bg=$BARBG]\
#[default]\
}"

#-- current window tag
setw -g window-status-current-format "\
#[fg=$BARBG]#[bg=$SELBG]\
#[fg=$SELFG]#[bg=$SELBG] #I∙#W \
#[fg=$SELBG]#[bg=$BARBG]\
#[default]"


#-- length of left div
set -g status-left-length 80

#-- left div contents
setw -g status-left "\
#[fg=$TITLEFG1]#[bg=$TITLEBG1] τ◦#(uptime | awk -F '[, ]' '{print $7}') \
#[fg=$TITLEFG2]#[bg=$TITLEBG2] #{pane_current_command} [#P] \
#[fg=$TITLEBG2]#[bg=$BARBG]\
#[default]"

#-- length of right div
set -g status-right-length 60

#-- right div contents
set -g status-right "#(~/dotfiles/tmux/net_info.sh \"$BARBG\" \"$TAGBG\" \"$TAGFG\")#[default]"

#}}}



